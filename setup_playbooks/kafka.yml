---
- name: Deploy a Kafka container with Podman using KRaft mode
  hosts: all
  become: true
  vars:
    kafka_container_name: cp-kafka
    kafka_image: "docker.io/confluentinc/cp-kafka:7.9.0"
    kafka_memory_limit: "6g"
    kafka_port: 9092
    kafka_controller_port: 9093
    kafka_data_dir: /var/lib/kafka/data
    kafka_config_dir: /etc/kafka
    kafka_tmp_dir: /tmp/kafka-setup-{{ ansible_date_time.epoch }}

  tasks:
    - name: Ensure required packages are installed
      ansible.builtin.package:
        name:
          - podman
          - python3-podman
        state: present

    - name: Pull Kafka image to ensure availability
      ansible.builtin.command:
        cmd: "podman pull {{ kafka_image }}"
      changed_when: false

    - name: Create unique temporary directory
      ansible.builtin.file:
        path: "{{ kafka_tmp_dir }}"
        state: directory
        mode: '0755'

    - name: Ensure Kafka data directory is completely removed
      ansible.builtin.file:
        path: "{{ kafka_data_dir }}"
        state: absent

    - name: Recreate Kafka data directory
      ansible.builtin.file:
        path: "{{ kafka_data_dir }}"
        state: directory
        owner: "1000"
        group: "1000"
        mode: '0755'

    - name: Create Kafka configuration directory
      ansible.builtin.file:
        path: "{{ kafka_config_dir }}"
        state: directory
        owner: "1000"
        group: "1000"
        mode: '0755'

    # ✅ Fix: Generate Kafka Cluster ID on the remote machine (not as a variable)
    - name: Generate Kafka Cluster ID
      ansible.builtin.command:
        cmd: "podman run --rm {{ kafka_image }} /usr/bin/kafka-storage random-uuid"
      register: generated_cluster_id
      changed_when: false

    - name: Store Kafka Cluster ID as a fact
      ansible.builtin.set_fact:
        kafka_cluster_id: "{{ generated_cluster_id.stdout | trim }}"

    - name: Create Log4j configuration file
      ansible.builtin.copy:
        dest: "{{ kafka_config_dir }}/tools-log4j.properties"
        content: |
          log4j.rootLogger=INFO, stdout
          log4j.appender.stdout=org.apache.log4j.ConsoleAppender
          log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
          log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
        owner: "1000"
        group: "1000"
        mode: '0644'

    - name: Generate server.properties file for Kafka
      ansible.builtin.copy:
        dest: "{{ kafka_config_dir }}/server.properties"
        content: |
          process.roles=broker,controller
          node.id=1
          controller.quorum.voters=1@localhost:9093
          controller.listener.names=CONTROLLER  # ✅ Fix: Add this line
          listeners=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
          listener.security.protocol.map=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
          inter.broker.listener.name=PLAINTEXT
          log.dirs=/var/lib/kafka/data
          num.network.threads=3
          num.io.threads=8
          socket.send.buffer.bytes=102400
          socket.receive.buffer.bytes=102400
          socket.request.max.bytes=104857600
          log.retention.hours=168
          num.partitions=1
          offsets.topic.replication.factor=1
          transaction.state.log.replication.factor=1
          transaction.state.log.min.isr=1
          min.insync.replicas=1
          log.segment.bytes=1073741824
          log.retention.check.interval.ms=300000
          cluster.id={{ kafka_cluster_id }}
        owner: "1000"
        group: "1000"
        mode: '0644'

    - name: Format Kafka storage
      ansible.builtin.command:
        cmd: >
          podman run --rm
          -v {{ kafka_data_dir }}:/var/lib/kafka/data:rw,Z
          -v {{ kafka_config_dir }}:/etc/kafka:ro,Z
          -e LOG4J_CONFIGURATION_FILE=/etc/kafka/tools-log4j.properties
          {{ kafka_image }}
          /usr/bin/kafka-storage format --config /etc/kafka/server.properties --cluster-id {{ kafka_cluster_id }}

    - name: Start Kafka container with KRaft mode
      containers.podman.podman_container:
        name: "{{ kafka_container_name }}"
        image: "{{ kafka_image }}"
        state: started
        detach: true
        memory: "{{ kafka_memory_limit }}"
        env:
          KAFKA_HEAP_OPTS: "-Xms1g -Xmx4g"
        hostname: kafka
        publish:
          - "{{ kafka_port }}:9092"
          - "{{ kafka_controller_port }}:9093"
        restart_policy: always
        network: bridge
        volume:
          - "{{ kafka_data_dir }}:/var/lib/kafka/data:rw,Z"
          - "{{ kafka_config_dir }}/server.properties:/etc/kafka/server.properties:ro,Z"

    - name: Wait until Kafka is listening on port 9092
      ansible.builtin.command:
        cmd: "podman exec {{ kafka_container_name }} bash -c 'nc -z localhost 9092'"
      register: kafka_ready
      retries: 6
      delay: 5
      changed_when: false
      failed_when: kafka_ready.rc != 0

    - name: Verify Kafka is running by listing topics
      ansible.builtin.command:
        cmd: "podman exec {{ kafka_container_name }} kafka-topics --list --bootstrap-server localhost:9092"
      register: topic_list
      changed_when: false
      retries: 3
      delay: 5
      until: topic_list.rc == 0

    - name: Display Kafka Topics
      ansible.builtin.debug:
        var: topic_list.stdout_lines
