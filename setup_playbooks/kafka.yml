---
- name: Deploy a Kafka container with Podman using KRaft mode (Final Fix)
  hosts: all
  become: true
  vars:
    kafka_container_name: cp-kafka
    kafka_image: "docker.io/confluentinc/cp-kafka:7.9.0"
    kafka_memory_limit: "4096m"
    kafka_port: 9092
    kafka_controller_port: 9093
    kafka_data_dir: /var/lib/kafka/data
    kafka_tmp_dir: /tmp/kafka-setup-{{ ansible_date_time.epoch }}
    kafka_cluster_id: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"

  tasks:
    - name: Ensure required packages are installed
      ansible.builtin.package:
        name:
          - podman
          - python3-podman
        state: present

    - name: Create unique temporary directory
      ansible.builtin.file:
        path: "{{ kafka_tmp_dir }}"
        state: directory
        mode: '0755'

    - name: Ensure Kafka data directory is completely removed
      ansible.builtin.file:
        path: "{{ kafka_data_dir }}"
        state: absent
      register: kafka_data_removed

    - name: Verify data directory removal
      ansible.builtin.command:
        cmd: "ls {{ kafka_data_dir }}"
      register: check_data_dir
      ignore_errors: yes
      changed_when: false
      failed_when: check_data_dir.rc == 0

    - name: Create new Kafka data directory
      ansible.builtin.file:
        path: "{{ kafka_data_dir }}"
        state: directory
        owner: "1000"
        group: "1000"
        mode: '0755'

    - name: Ensure meta.properties is removed before formatting
      ansible.builtin.file:
        path: "{{ kafka_data_dir }}/meta.properties"
        state: absent

    - name: Create Kafka configuration file
      ansible.builtin.copy:
        dest: "{{ kafka_tmp_dir }}/server.properties"
        content: |
          process.roles=broker,controller
          node.id=1
          controller.quorum.voters=1@localhost:9093
          controller.listener.names=CONTROLLER
          listeners=PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093,PLAINTEXT_INTERNAL://localhost:29092
          advertised.listeners=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://localhost:29092
          listener.security.protocol.map=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
          inter.broker.listener.name=PLAINTEXT
          log.dirs=/var/lib/kafka/data
          offsets.topic.replication.factor=1
          transaction.state.log.min.isr=1
          transaction.state.log.replication.factor=1
          auto.create.topics.enable=true
        mode: '0644'

    - name: Create environment variables file
      ansible.builtin.copy:
        dest: "{{ kafka_tmp_dir }}/env-vars"
        content: |
          KAFKA_CLUSTER_ID={{ kafka_cluster_id }}
          KAFKA_PROCESS_ROLES=broker,controller
          KAFKA_NODE_ID=1
          KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
          KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
          KAFKA_LISTENERS=PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093,PLAINTEXT_INTERNAL://localhost:29092
          KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://localhost:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
          KAFKA_LOG_DIRS=/var/lib/kafka/data
          KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
        mode: '0644'

    - name: Create Podman network if it doesn't exist
      containers.podman.podman_network:
        name: kafka-network
        state: present

    - name: Remove existing Kafka container if it exists
      containers.podman.podman_container:
        name: "{{ kafka_container_name }}"
        state: absent
      ignore_errors: yes

    - name: Format Kafka storage directory
      ansible.builtin.command:
        cmd: "podman run --rm -v {{ kafka_data_dir }}:/var/lib/kafka/data:Z -v {{ kafka_tmp_dir }}:/tmp/config:Z {{ kafka_image }} bash -c 'KAFKA_HEAP_OPTS=\"-Xms512m -Xmx1g\" kafka-storage format --ignore-formatted -t {{ kafka_cluster_id }} -c /tmp/config/server.properties'"
      register: format_result

    - name: Display format result
      ansible.builtin.debug:
        var: format_result.stdout_lines

    - name: Start Kafka container with KRaft mode
      containers.podman.podman_container:
        name: "{{ kafka_container_name }}"
        image: "{{ kafka_image }}"
        state: started
        detach: true
        memory: "{{ kafka_memory_limit }}"
        env_file: "{{ kafka_tmp_dir }}/env-vars"
        hostname: kafka
        publish:
          - "{{ kafka_port }}:{{ kafka_port }}"
          - "{{ kafka_controller_port }}:{{ kafka_controller_port }}"
          - "29092:29092"
        restart_policy: always
        network: kafka-network
        volume:
          - "{{ kafka_data_dir }}:/var/lib/kafka/data:Z"
          - "{{ kafka_tmp_dir }}:/tmp/config:Z"

    - name: Wait for Kafka container to be ready
      ansible.builtin.pause:
        seconds: 20

    - name: Get container logs
      ansible.builtin.shell:
        cmd: podman logs {{ kafka_container_name }} | tail -n 30
      register: container_logs
      changed_when: false

    - name: Display container logs
      ansible.builtin.debug:
        var: container_logs.stdout_lines
