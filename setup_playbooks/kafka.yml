---
- name: Deploy a Kafka container with Podman using KRaft mode (Final Fix)
  hosts: all
  become: true
  vars:
    kafka_container_name: cp-kafka
    kafka_image: "docker.io/confluentinc/cp-kafka:7.9.0"
    kafka_memory_limit: "6g"
    kafka_port: 9092
    kafka_controller_port: 9093
    kafka_data_dir: /var/lib/kafka/data
    kafka_tmp_dir: /tmp/kafka-setup-{{ ansible_date_time.epoch }}

  tasks:
    - name: Ensure required packages are installed
      ansible.builtin.package:
        name:
          - podman
          - python3-podman
        state: present

    - name: Pull Kafka image to ensure availability
      ansible.builtin.command:
        cmd: "podman pull {{ kafka_image }}"
      changed_when: false

    - name: Create unique temporary directory
      ansible.builtin.file:
        path: "{{ kafka_tmp_dir }}"
        state: directory
        mode: '0755'

    - name: Ensure Kafka data directory is completely removed
      ansible.builtin.file:
        path: "{{ kafka_data_dir }}"
        state: absent

    - name: Recreate Kafka data directory
      ansible.builtin.file:
        path: "{{ kafka_data_dir }}"
        state: directory
        owner: "1000"
        group: "1000"
        mode: '0755'

    - name: Ensure Podman network for Kafka exists
      containers.podman.podman_network:
        name: kafka-network
        state: present

    - name: Force remove any existing Kafka container
      ansible.builtin.command:
        cmd: "podman rm -f {{ kafka_container_name }}"
      ignore_errors: yes
      changed_when: false

    - name: Generate Kafka KRaft Cluster ID
      ansible.builtin.command:
        cmd: "podman run --rm {{ kafka_image }} /usr/bin/kafka-storage random-uuid"
      register: generated_cluster_id
      changed_when: false

    - name: Ensure Kafka KRaft Cluster ID is set
      ansible.builtin.set_fact:
        kafka_cluster_id: "{{ generated_cluster_id.stdout | trim }}"

    - name: Format Kafka storage inside the container
      ansible.builtin.command:
        cmd: >
          podman run --rm -v {{ kafka_data_dir }}:/var/lib/kafka/data:rw,Z {{ kafka_image }}
          /usr/bin/kafka-storage format --cluster-id {{ kafka_cluster_id }} --config /etc/kafka/kraft/server.properties
      register: format_result

    - name: Start Kafka container with KRaft mode
      containers.podman.podman_container:
        name: "{{ kafka_container_name }}"
        image: "{{ kafka_image }}"
        state: started
        detach: true
        memory: "6g"
        env:
          KAFKA_HEAP_OPTS: "-Xms1g -Xmx4g"
          KAFKA_KRAFT_CLUSTER_ID: "{{ kafka_cluster_id }}"
          KAFKA_PROCESS_ROLES: "broker,controller"
          KAFKA_NODE_ID: "1"
          KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
          KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
          KAFKA_LISTENERS: "PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093,PLAINTEXT_INTERNAL://localhost:29092"
          KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://localhost:29092"
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
          KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
          KAFKA_LOG_DIRS: "/var/lib/kafka/data"
          KAFKA_METADATA_LOG_DIR: "/var/lib/kafka/data"
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        hostname: kafka
        publish:
          - "{{ kafka_port }}:{{ kafka_port }}"
          - "{{ kafka_controller_port }}:{{ kafka_controller_port }}"
          - "29092:29092"
        restart_policy: always
        network: kafka-network
        volume:
          - "{{ kafka_data_dir }}:/var/lib/kafka/data:rw,Z"

    - name: Verify KAFKA_KRAFT_CLUSTER_ID inside the running container
      ansible.builtin.shell:
        cmd: "podman exec {{ kafka_container_name }} env | grep KAFKA_KRAFT_CLUSTER_ID"
      register: kafka_env_check
      changed_when: false

    - name: Display Kafka KRaft Cluster ID inside container
      ansible.builtin.debug:
        var: kafka_env_check.stdout_lines

    - name: Wait until Kafka is listening on port 9092
      ansible.builtin.command:
        cmd: "podman exec {{ kafka_container_name }} bash -c 'nc -z localhost 9092'"
      register: kafka_ready
      retries: 6
      delay: 5
      changed_when: false
      failed_when: kafka_ready.rc != 0

    - name: Verify Kafka is running by listing topics
      ansible.builtin.command:
        cmd: "podman exec {{ kafka_container_name }} kafka-topics --list --bootstrap-server localhost:9092"
      register: topic_list
      changed_when: false
      retries: 3
      delay: 5
      until: topic_list.rc == 0

    - name: Debug Kafka Logs if Topic List Fails
      ansible.builtin.command:
        cmd: "podman logs {{ kafka_container_name }}"
      register: kafka_logs
      when: topic_list.rc != 0
      changed_when: false

    - name: Display last 20 Kafka log lines if Startup Fails
      ansible.builtin.debug:
        msg: "{{ kafka_logs.stdout_lines | list | select('string') | list | slice(-20) }}"
      when: topic_list.rc != 0

    - name: Display Kafka Topics
      ansible.builtin.debug:
        var: topic_list.stdout_lines
